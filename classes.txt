Goals
=====
To create a program that improves my odds of winning at the Euro-Millions lottery or the UK Lotto.
To do this, there will be two programs.

1. Use various statistics and ticket generation methods to evaluate which method is most likely to win:
- small wins (2-3 ball wins)
- large wins (4-6 ball wins)
Stats will be generated from past data.
- Load results from various data sources. DONE.
Stats generation must be done independently for each set of balls. So
 EuroMillions uses two calls, one for the main balls and another for the lucky
 stars.  Lotto uses one call.  Lotto sets of balls should be considered at some
 point.
Each stats generation call should test the following variables:
- different ranges of dates for inclusion into the stats.

Create a stats generation class that can be used with different ball sets.
Once stats class per ball set (kind of metadata about the data (results)).
One class with several methods, e.g.
 Con/des
 analyse
 get_most_probable returning list_of_balls
 get_least_probable returning list_of_balls
 get_??? returning list_of_balls (based on intervals).

Ticket generation is closely tied to the stats generation but they are not
the same.  Tickets are generated by taking the information from the stats and
using it in different ways.
Ticket generation calls:
- the functions on the stats classes to get the list of balls that it needs.
- has access to one stats class instance per set of balls (Lotto has one or
eight, EuroMillions has two).

Generate tickets as follows:
	Generate list of data ranges
	For each data range
		For each stats_method
			Generate stats
			For each ticket generation method
				Generate a ticket using the stats
				Evaluate the ticket
				Store results


2. Generate tickets using selected ticket methods.  This program should reuse
the classes and methods developed for the evaluation program.
Read the results.
Generate stats using the best method,
Generate tickets using the best method.



Class relationships
===================

Evaluate - file not class - uses:
	EvaluationResult

StatsGenerationMethod
	+analyse(LotteryResults, DateRange) - Iterates over LotteryResults and
		generates the lists returned by the other functions.
	+get_most_probable returning list_of_balls
	+get_least_probable returning list_of_balls
	+get_??? returning list_of_balls (based on intervals).

Lottery has:
	-Name
	-LotteryResults[]
	-SetOfBalls[], e.g. EuroMillions has 2
	-LotteryParser[] - Parses the results file and writes the results into the LotteryResults instance.
	-LotteryTicketGenerationMethod[]

LotteryTicketGenerationMethod
	""" Generates a number of ticket using the given stats. """
	+generate(StatsGenerationMethod, date, num_lines) - returns a new LotteryTicket of the
		Lottery type filled in with the number of lines.

LotteryTicket
	-TicketLine[]
	-DateTime
	+generate(GenerationMethod, stats, date)
	+score(draw) returns Score

LotteryResults
	-Lottery - Set to the correct lottery if a parser is found.
	-available_lotteries[] of Lottery - uses these to find the right parser.

LotteryDraw
	+draw_date

LotteryParser
	None

TicketLine is a single line on a ticket.  It has:
	balls[]
	+score(draw) - returns a Score based on the given draw data.